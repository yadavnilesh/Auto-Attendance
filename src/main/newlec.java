/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.awt.image.DataBufferByte;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FilenameFilter;
import java.io.IOException;
import java.io.InputStream;
import java.nio.ByteBuffer;
import java.nio.IntBuffer;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import static org.bytedeco.javacpp.opencv_imgcodecs.CV_LOAD_IMAGE_COLOR;
import static org.bytedeco.javacpp.opencv_core.CV_32SC1;
import static org.bytedeco.javacpp.opencv_core.CV_8UC1;
import java.sql.*;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import static org.bytedeco.javacpp.opencv_imgcodecs.imread;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.bytedeco.javacpp.BytePointer;
import org.bytedeco.javacpp.DoublePointer;
import org.bytedeco.javacpp.IntPointer;
import org.bytedeco.javacpp.Pointer;
import org.bytedeco.javacpp.helper.opencv_core;
import static org.bytedeco.javacpp.opencv_core.CV_32SC1;
import org.bytedeco.javacpp.opencv_core.CvType;
import org.bytedeco.javacpp.opencv_core.MatVector;
import org.bytedeco.javacpp.opencv_face;
import org.bytedeco.javacpp.opencv_face.EigenFaceRecognizer;
import org.bytedeco.javacpp.opencv_face.FaceRecognizer;
import org.bytedeco.javacpp.opencv_core.Mat;
import org.bytedeco.javacpp.opencv_face.FisherFaceRecognizer;
import org.bytedeco.javacpp.opencv_face.LBPHFaceRecognizer;
import static org.bytedeco.javacpp.opencv_imgcodecs.CV_LOAD_IMAGE_GRAYSCALE;
import static org.bytedeco.javacpp.opencv_imgcodecs.imdecode;
import static org.bytedeco.javacpp.opencv_imgcodecs.imread;
import org.opencv.core.Core;
import org.opencv.core.MatOfByte;
import org.opencv.core.MatOfRect;
import org.opencv.core.Point;
import org.opencv.core.Rect;
import org.opencv.core.Scalar;
import org.opencv.core.Size;
import org.opencv.highgui.Highgui;
import org.opencv.imgproc.Imgproc;
import static org.opencv.imgproc.Imgproc.COLOR_BGRA2GRAY;
import static org.opencv.imgproc.Imgproc.cvtColor;
import static org.opencv.imgproc.Imgproc.equalizeHist;
import org.opencv.objdetect.CascadeClassifier;
import static org.bytedeco.javacpp.opencv_imgcodecs.imread;
import static org.bytedeco.javacpp.opencv_imgcodecs.imdecode;
import static org.bytedeco.javacpp.opencv_imgcodecs.imread;
import static org.opencv.imgproc.Imgproc.cvtColor;


/**
 *
 * @author niraj
 */
public class newlec extends javax.swing.JFrame {

    /**
     * Creates new form UpdateStudentDetails
     *
     *
     */
    MatVector images;
    File f;
    Mat labels;
    ResultSet rs;
    String currentname;
    FaceRecognizer faceRecognizer ;
    MatOfRect faceDetections = new MatOfRect();
    String[] name;
    CascadeClassifier faceDetector = new CascadeClassifier(livecamera.class.getResource("haarcascade_frontalface_default.xml").getPath().substring(1));
    BufferedImage buf;
    org.opencv.core.Mat  frame=new org.opencv.core.Mat();
    private int totaldet;
    private BufferedImage[] bm;
    
    public newlec() {
        initComponents();
        image.setOpaque(true);
        image.setBackground(Color.WHITE);
        addcourse();
        setup(0);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jPanel2 = new javax.swing.JPanel();
        prev = new javax.swing.JButton();
        first = new javax.swing.JButton();
        stuimg = new javax.swing.JLabel();
        stuname = new javax.swing.JTextField();
        last = new javax.swing.JButton();
        next = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        image = new javax.swing.JLabel();
        year = new javax.swing.JComboBox<>();
        course = new javax.swing.JComboBox<>();
        jTextField2 = new javax.swing.JTextField();
        browseimg = new javax.swing.JButton();
        subject = new javax.swing.JComboBox<>();
        newlec = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();

        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.setMinimumSize(new java.awt.Dimension(700, 500));
        fileChooser.setPreferredSize(new java.awt.Dimension(900, 600));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        prev.setBackground(new java.awt.Color(255, 255, 255));
        prev.setText("<<");
        prev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevActionPerformed(evt);
            }
        });

        first.setBackground(new java.awt.Color(255, 255, 255));
        first.setText("<");
        first.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstActionPerformed(evt);
            }
        });

        stuimg.setBackground(new java.awt.Color(255, 255, 255));

        stuname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stunameActionPerformed(evt);
            }
        });

        last.setBackground(new java.awt.Color(255, 255, 255));
        last.setText(">");
        last.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastActionPerformed(evt);
            }
        });

        next.setBackground(new java.awt.Color(255, 255, 255));
        next.setText(">>");
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        image.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 735, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(image, javax.swing.GroupLayout.DEFAULT_SIZE, 735, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 330, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        year.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Year" }));
        year.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                yearItemStateChanged(evt);
            }
        });

        course.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Course" }));
        course.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                courseItemStateChanged(evt);
            }
        });

        jTextField2.setEditable(false);
        jTextField2.setBackground(new java.awt.Color(255, 255, 255));
        jTextField2.setEnabled(false);
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        browseimg.setBackground(new java.awt.Color(255, 255, 255));
        browseimg.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        browseimg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/browse.png"))); // NOI18N
        browseimg.setBorder(null);
        browseimg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseimgActionPerformed(evt);
            }
        });

        subject.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Subject" }));
        subject.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                subjectItemStateChanged(evt);
            }
        });

        newlec.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        newlec.setText("Start new lecture");
        newlec.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        newlec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newlecActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(stuimg, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 666, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(browseimg)
                        .addGap(40, 40, 40)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(first, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(prev, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(last, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(subject, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(course, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stuname, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newlec, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(44, 44, 44))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(312, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(stuimg, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(stuname, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(last, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(prev, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(first, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                        .addComponent(course, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(subject, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(newlec, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(browseimg))
                        .addGap(36, 36, 36))))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 130, Short.MAX_VALUE)))
        );

        jPanel3.setBackground(new java.awt.Color(0, 204, 153));
        jPanel3.setPreferredSize(new java.awt.Dimension(769, 77));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Student Database");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(0, 204, 153));
        jPanel5.setPreferredSize(new java.awt.Dimension(843, 60));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Copyright@2018 Auto Attendance System");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addGap(355, 355, 355))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 1057, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1057, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void newlecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newlecActionPerformed
        detect();
        load();
        rec();
    }//GEN-LAST:event_newlecActionPerformed

    private void subjectItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_subjectItemStateChanged
        // TODO add your handling code here:
        if(subject.getItemCount()>1)
        setup(1);
    }//GEN-LAST:event_subjectItemStateChanged

    private void browseimgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseimgActionPerformed
        // TODO add your handling code here:
        // JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        //FileNameExtensionFilter filter = new FileNameExtensionFilter("*.IMAGE", "jpg","gif","png","bmp");
        FileFilter imageFilter = new FileNameExtensionFilter(
            "Image files", ImageIO.getReaderFileSuffixes());
        fileChooser.addChoosableFileFilter(imageFilter);
        int result = fileChooser.showSaveDialog(null);
        if(result == JFileChooser.APPROVE_OPTION){
            File selectedFile = fileChooser.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            // label.setIcon(ResizeImage(path));
            String s = path;
            f = new File(s);
            jTextField2.setText(s);
            try{
                Image img=ImageIO.read(f);
                BufferedImage bu = (BufferedImage) img;
                Graphics g=jPanel1.getGraphics();
                g.drawImage(bu, 0, 0, jPanel1.getWidth(), jPanel1.getHeight(), 0, 0, bu.getWidth(), bu.getHeight(), null);
            }
            catch(Exception ex)
            {
                ex.printStackTrace();
            }

        }
        else if(result == JFileChooser.CANCEL_OPTION){
            System.out.println("No Data");
        }
    }//GEN-LAST:event_browseimgActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void courseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_courseItemStateChanged
        year.removeAllItems();
        year.addItem("Select Year");
        setyear();
    }//GEN-LAST:event_courseItemStateChanged

    private void yearItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_yearItemStateChanged
        subject.removeAllItems();
        subject.addItem("Select Subject");
        addsubject();
    }//GEN-LAST:event_yearItemStateChanged

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        try {
            if(rs.isLast())
            {

            }
            else if(rs.next())
            {
                currentname=new String(rs.getString("rollno"));
                stuname.setText(rs.getString("rollno"));
                stuimg.setIcon(new ImageIcon(rs.getBytes("image")));
            }

        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_nextActionPerformed

    private void lastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            if(rs.last())
            {
                currentname=new String(rs.getString("rollno"));
                stuname.setText(rs.getString("rollno"));
                stuimg.setIcon(new ImageIcon(rs.getBytes("image")));
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_lastActionPerformed

    private void stunameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stunameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stunameActionPerformed

    private void firstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            if(rs.first())
            {
                currentname=new String(rs.getString("rollno"));
                stuname.setText(rs.getString("rollno"));
                stuimg.setIcon(new ImageIcon(rs.getBytes("image")));
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_firstActionPerformed

    private void prevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            if(rs.isFirst())
            {

            }
            else if(rs.previous())
            {
                currentname=new String(rs.getString("rollno"));
                stuname.setText(rs.getString("rollno"));
                stuimg.setIcon(new ImageIcon(rs.getBytes("image")));
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_prevActionPerformed
    void setup(int i)
    {
        try{           
        Class.forName("com.mysql.jdbc.Driver");  // MySQL database connection
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/facedb?" + "user=root&password=root");     
        Statement ps = con.createStatement(
                           ResultSet.TYPE_SCROLL_INSENSITIVE,
                           ResultSet.CONCUR_UPDATABLE);
        String sql = null;
       if(i==0)
       sql="select * from simages";
       else if(i==1)
        sql="select * from simages where course='"+course.getSelectedItem().toString()+"'";

       rs = ps.executeQuery(sql);
       rs.next();

       currentname=new String(rs.getString("rollno"));
       stuname.setText(rs.getString("rollno"));
       stuimg.setIcon(new ImageIcon(rs.getBytes("image")));        
         }
         catch(Exception e)
         {
             e.printStackTrace();
         }
    }
    static
    {
         System.loadLibrary(Core.NATIVE_LIBRARY_NAME);

    }
    void addsubject()
    {
        if(year.getItemCount()>0)
        {
        try{
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/facedb?" + "user=root&password=root");
            PreparedStatement pst = conn.prepareStatement("Select  * from subject where course=? and year=? ");
            pst.setString(1, course.getSelectedItem().toString());
            pst.setString(2, year.getSelectedItem().toString());
            ResultSet rs=pst.executeQuery();
            while(rs.next())
            {
                subject.addItem(rs.getString("subject"));
            }
            }catch(Exception ex){
                ex.printStackTrace();
            }
        }
    }
    void addcourse()
    {
        try{
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/facedb?" + "user=root&password=root");
            PreparedStatement pst = conn.prepareStatement("Select  * from course ");
            ResultSet rs=pst.executeQuery();
            while(rs.next())
            {
                course.addItem(rs.getString("course"));
            }
            }catch(Exception ex){
                ex.printStackTrace();
            }
    }
    int getrow()
    {
        int rownumber=0;
        
        try {
            int cur=rs.getRow();
            rs.beforeFirst();
            while(rs.next())
            {
                rownumber++;
            }

    rs.absolute(cur);
            
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        return rownumber;    

    }
    void load()
    {
        try {
           
             int total=getrow();
             name=new String[total];
             int cur=rs.getRow();
            images=new MatVector(total);
            labels = new Mat(total, 1, CV_32SC1);
            IntBuffer labelsBuf = labels.createBuffer();
            rs.beforeFirst();
            int i=0;
            while(rs.next())
            {
              Mat m=imdecode(new Mat(new BytePointer(rs.getBytes("eximage")),false),CV_LOAD_IMAGE_GRAYSCALE);
              name[i]=rs.getString("rollno");
             images.put(i, m);
            labelsBuf.put(i, i);
            i++;
            }
            faceRecognizer=EigenFaceRecognizer.create();

           // faceRecognizer=FisherFaceRecognizer.create();
          //  faceRecognizer=LBPHFaceRecognizer.create();
            faceRecognizer.train(images, labels);
            rs.absolute(cur);
        }catch (SQLException ex) {
            Logger.getLogger(newlec.class.getName()).log(Level.SEVERE, null, ex);
        }
    }    void rec()
    {
        IntPointer label = new IntPointer(1);
        DoublePointer confidence = new DoublePointer(1);
// BytePointer b = new BytePointer(((DataBufferByte) bm[0].getRaster().getDataBuffer()).getData());
// Mat m =imread(b, CV_LOAD_IMAGE_GRAYSCALE);
//       Mat m=imread()
//   byte[] data = ((DataBufferByte) bm[0].getRaster().getDataBuffer()).getData();
//int DataBufferByte = 0;
//ByteBuffer.wrap(data);
//BytePointer b=new BytePointer(ByteBuffer.wrap(data));
// Mat m=imdecode(new Mat(b,false),CV_LOAD_IMAGE_GRAYSCALE);
//Mat m = new Mat(bm[0].getHeight(),bm[0].getWidth(),bm[0].getType(),new BytePointer(ByteBuffer.wrap((DataBufferByte)bm[0].getRaster().getDataBuffer()).getData()));
 //BytePointer bp=new BytePointer(ByteBuffer.wrap(image.getRaster.getDataBuffer.asInstanceOf[DataBufferByte].getData));
//new Image(new IplImage(m),name,itype);
       Mat m=imread("C:\\Users\\niraj\\Pictures\\nil.jpg", CV_LOAD_IMAGE_GRAYSCALE);
        faceRecognizer.predict(m, label, confidence);
        int predictedLabel = label.get(0);
        JOptionPane.showMessageDialog(null, Integer.toString(predictedLabel)+"  "+name[predictedLabel]);
    }    void detect()
    {
                try
        {
            Image im = ImageIO.read(f);
            buf = (BufferedImage) im;
            org.opencv.core.Mat col;
            col = new org.opencv.core.Mat(buf.getHeight(), buf.getWidth(),org.opencv.core.CvType.CV_8UC3);
            byte[] data1 = ((DataBufferByte) buf.getRaster().getDataBuffer()).getData();
            col.put(0, 0, data1);
            
            cvtColor(col, frame, COLOR_BGRA2GRAY);        

            if(faceDetector.empty())
            JOptionPane.showMessageDialog(null, "error loading");
            faceDetector.detectMultiScale(frame, faceDetections,1.1,17,0,new Size(50,50),new Size());
            totaldet=faceDetections.toArray().length;
            bm=new BufferedImage[totaldet];
            org.opencv.core.Mat m=new org.opencv.core.Mat();
            int k=0;
            for (Rect rect : faceDetections.toArray())
            {
                rect.x += (int)(rect.height * 0.1);
                rect.y += (int)(rect.width * 0.1);
                rect.height -= (int)(rect.height * 0.1);
                rect.width -= (int)(rect.width * 0.225);
                m=new org.opencv.core.Mat(frame,rect);
                Imgproc.resize(m, m, new Size(150,150));
               equalizeHist(m, m);
                MatOfByte me = new MatOfByte();
                Highgui.imencode(".bmp", m, me);
                Image i = ImageIO.read(new ByteArrayInputStream(me.toArray()));
                bm[k] = (BufferedImage) i;
                Highgui.imwrite("C:\\Users\\niraj\\Pictures\\nil.jpg", m);
                k++;
            }
            for (Rect rect : faceDetections.toArray())
            {
                rect.x += (int)(rect.height * 0.1);
                rect.y += (int)(rect.width *+ 0.1);
                rect.height -= (int)(rect.height * 0.1);
                rect.width -= (int)(rect.width * 0.225);
                Core.rectangle(col, new Point(rect.x, rect.y), new Point(rect.x + rect.width, rect.y + rect.height),
                new Scalar(0, 0,255),5);
            }
            MatOfByte me = new MatOfByte();
            Image i;
            BufferedImage bu;
            Imgproc.resize(col, m, new Size(image.getWidth(), image.getHeight()));
            Highgui.imencode(".bmp", m, me);
            i = ImageIO.read(new ByteArrayInputStream(me.toArray()));
            bu = (BufferedImage) i;
            image.setIcon(new ImageIcon(bu));
        }
        catch(Exception ex)
        {
          ex.printStackTrace();;
        }
    }

    void setyear()
    {
         try{
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/facedb?" + "user=root&password=root");
            PreparedStatement pst = conn.prepareStatement("Select  * from course where course=?");
            pst.setString(1,course.getSelectedItem().toString());
            ResultSet rs=pst.executeQuery();
            if(rs.next())
            {
               int x=Integer.parseInt(rs.getString("year"));
               if(x>=1)
               {
                   year.addItem("First Year");
               }
               if(x>=2)
                    year.addItem("Second Year");
               if(x>=3)
                    year.addItem("Third Year");
                   if(x>=4)
                    year.addItem("Fourth Year");
            }
            }catch(Exception ex){
                ex.printStackTrace();
            }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(newlec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(newlec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(newlec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(newlec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        System.loadLibrary(Core.NATIVE_LIBRARY_NAME);

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new newlec().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseimg;
    private javax.swing.JComboBox<String> course;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JButton first;
    private javax.swing.JLabel image;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JButton last;
    private javax.swing.JButton newlec;
    private javax.swing.JButton next;
    private javax.swing.JButton prev;
    private javax.swing.JLabel stuimg;
    private javax.swing.JTextField stuname;
    private javax.swing.JComboBox<String> subject;
    private javax.swing.JComboBox<String> year;
    // End of variables declaration//GEN-END:variables
}
